"""Sphinx configuration."""
project = "My Data Model"
author = "Gareth Stockwell"
copyright = "2023, Gareth Stockwell"
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.autosummary",
    "sphinx.ext.napoleon",
    "sphinx_click",
    "myst_parser",
]
autodoc_class_signature = "separated"
autodoc_typehints = "description"
autosummary_generate = True
html_theme = "furo"
templates_path = ["_templates"]


def _exclude_attrs_autogen(app, what, name, obj, options, lines):
    if "generated by attrs" in "".join(lines):
        print(f"exclude_attrs_autogen: what={what} name={name} obj={obj}")
        del lines[:]
        return True


def _skip_member_attrs_dunder(app, what, name, obj, skip, options):
    # if hasattr(obj, "__attrs_attrs__") and
    if name == "__init__":
        print(f"what={what} name={name} obj={obj}")
    if obj.__doc__ is not None and "generated by attrs" in obj.__doc__:
        return True


def setup(app):
    """Set up Sphinx."""
    pass
    # app.connect("autodoc-process-docstring", _exclude_attrs_autogen)
    app.connect("autodoc-skip-member", _skip_member_attrs_dunder)
